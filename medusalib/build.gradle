apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
}

ext {
    PUBLISH_GROUP_ID = 'com.trendyol'
    PUBLISH_VERSION = '0.10.1'
    PUBLISH_ARTIFACT_ID = 'medusa'
    PUBLISH_DESCRIPTION = "Android Fragment Stack Controller"
    PUBLISH_URL = "https://github.com/Trendyol/medusa"
    PUBLISH_LICENSE_NAME = "Medusa License"
    PUBLISH_LICENSE_URL = "https://github.com/Trendyol/medusa/blob/master/LICENSE"
    PUBLISH_SCM_CONNECTION = "scm:git:github.com/Trendyol/medusa.git"
    PUBLISH_SCM_DEV_CONNECTION = "scm:git:ssh://github.com/Trendyol/medusa.git"
    PUBLISH_SCM_URL = "https://github.com/Trendyol/medusa/tree/main"
    
    mGroupId = "com.ozanlimited"
    mArtifactId = "medusa"
    mVersionCode = 1
    mVersionName = "1.0.0"

    mLibraryName = "Medusa"
    mLibraryDescription = ""
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId mGroupId
                artifactId mArtifactId
                version mVersionName

                from components.release

                artifact androidSourcesJar

                pom {
                    name = mLibraryName
                    description = mLibraryDescription
                }
            }
        }

        repositories {
            maven {
                url System.getenv("GITLAB_REPO_URL")
                credentials(HttpHeaderCredentials) {
                    name = System.getenv("GITLAB_DEPLOY_KEY")
                    value = System.getenv("GITLAB_DEPLOY_TOKEN")
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            }
        }
    }
}

publish.dependsOn assemble

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.lifecycle:lifecycle-common:2.4.1"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'com.google.truth:truth:1.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

repositories {
    mavenCentral()
}
